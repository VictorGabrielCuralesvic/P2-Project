// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                @id @default(autoincrement())
  email             String             @unique
  password          String
  name              String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  transactions      Transaction[]
  priceCalculations PriceCalculation[]
  reports           Report[]           @relation("UserReports")
  Sale              Sale[]
}

model Transaction {
  id        Int             @id @default(autoincrement())
  user      User            @relation(fields: [userId], references: [id])
  userId    Int
  type      TransactionType
  amount    Float
  date      DateTime        @default(now())
}

model PriceCalculation {
  id              Int          @id @default(autoincrement())
  user            User         @relation(fields: [userId], references: [id])
  userId          Int
  productName     String
  ingredientCosts Float
  laborCosts      Float        @default(0.0)
  packagingCosts  Float?
  indirectCosts   Float        @default(0.0)
  margin          Float
  totalCost       Float        @default(0.0)
  suggestedPrice  Float
  ingredients     Ingredient[]
  Sale            Sale[]
}

model Ingredient {
  id                 Int              @id @default(autoincrement())
  name               String
  quantity           Float
  price              Float
  usedQuantity       Float
  priceCalculationId Int
  priceCalculation   PriceCalculation @relation(fields: [priceCalculationId], references: [id])
}

model FinancialTip {
  id        Int      @id @default(autoincrement())
  content   String
}

model Report {
  id        Int        @id @default(autoincrement())
  user      User       @relation("UserReports", fields: [userId], references: [id])
  userId    Int
  type      ReportType
  startDate DateTime
  endDate   DateTime
  data      Json
}

model PasswordReset {
  id        Int      @id @default(autoincrement())
  email     String
  token     String
}

model Sale {
  id                 Int              @id @default(autoincrement())
  user               User             @relation(fields: [userId], references: [id])
  userId             Int
  priceCalculation   PriceCalculation @relation(fields: [priceCalculationId], references: [id])
  priceCalculationId Int
  quantity           Int
  totalValue          Float            @default(0.0)
  date               DateTime         @default(now())
}

enum TransactionType {
  EXPENSE
  INCOME
}

enum ReportType {
  WEEKLY
  MONTHLY
  BIMONTHLY
  QUARTERLY
  SEMIANNUAL
  ANNUAL
}
